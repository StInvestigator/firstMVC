@using System.Text.Json
@using firstMVC.Areas.Moderator.Models.Forms
@model User
@{
    var reviews = Model.Reviews.Where(x => x.Status == CurrentStatus.OnModeration).ToList();
}
<div class="modal-content">
    <div class="modal-header">
        <h5 class="modal-title" id="formModalLabel">Відгуки @Model.Name</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
    </div>
    <div class="modal-body">
    @if(reviews.Count==0){
        <h3 class="text-center">Всі відгуки відмодеровані</h3>
    }
    @foreach(var item in @reviews)
    {
        
        <div class="card mb-2">
            <div class="card-body">
                    <div class="d-flex" style="justify-content:space-between;">
                    <div><h5 class="card-title" style="font-size:24px">@(item.Name == string.Empty ? "Гість" :item.Name)</h5></div>
                    <div><p class="mt-0 mb-1 text-black-50">@item.CreatedAt.ToString()</p></div>
                </div>
                <p class="mt-3 mb-1 text-black-50">Оцінка:</p>
                <div class="rate-select d-flex w-50" style="justify-content:space-around; font-size:20px">
                    <div><i class="fa fa-2x fa-star" selected="@(item.Rating>=1)"></i></div>
                    <div><i class="fa fa-2x fa-star" selected="@(item.Rating>=2)"></i></div>
                    <div><i class="fa fa-2x fa-star" selected="@(item.Rating>=3)"></i></div>
                    <div><i class="fa fa-2x fa-star" selected="@(item.Rating>=4)"></i></div>
                    <div><i class="fa fa-2x fa-star" selected="@(item.Rating>=5)"></i></div>
                </div>
                <p class="mt-3 mb-2 text-black-50">Відгук:</p>
                <p style="font-size:18px">@(item.Text == string.Empty ? "Відгук відсутній" :item.Text)</p>
                    <div class="d-flex justify-content-end">
                        <button class="btn btn-outline-danger me-2 confirm-action"
                                asp-area="Moderator"
                                asp-controller="Review"
                                asp-action="RejectReview"
                                data-confirm-message="Ви дійсно хочете відхилити цей відгук?"
                                data-success-message="Відгук було відхилено"
                                data-error-message="Сталася помилка"
                                data-body="@JsonSerializer.Serialize(new ModerateReview{UserId = Model.Id, ReviewId = item.Id})"
                        >Відхилити</button>
                        <button class="btn btn-outline-success confirm-action"
                                asp-area="Moderator"
                                asp-controller="Review"
                                asp-action="UploadReview"
                                data-confirm-message="Ви дійсно хочете ухвалити цей відгук?"
                                data-success-message="Відгук було ухвалено"
                                data-error-message="Сталася помилка"
                                data-body="@JsonSerializer.Serialize(new ModerateReview{UserId = Model.Id, ReviewId = item.Id})"
                        >Ухвалити</button>
                    </div>
            </div>
        </div>
    }
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Закрити</button>
    </div>
</div>

 <script>
    $(".confirm-action").on("click", e => {

        e.preventDefault()
        let target = $(e.target)
        let confirm = target.data("confirm-message")
        let success = target.data("success-message")
        let error = target.data("error-message")

        let body = target.data('body')
        let url = target.attr('formaction')

        console.log(body)

        Swal.fire({
            title: confirm,
            showDenyButton: false,
            showCancelButton: true,
            confirmButtonText: "Підтвердити",
            cancelButtonText: "Закрити"
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(url, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(body)
                }).then(d => d.json())
                    .then(data => {
                        if (data.ok) {
                            Swal.fire(success, "", "success").then(() => {
                                myModal.hide()
                                setTimeout(() => {
                                    window.location.reload()
                                },0);
                            });
                        }
                        else {
                            Swal.fire(error, "", "error");
                        }
                    }).catch(err => {
                        console.log(err)
                        Swal.fire(error, "", "error");
                    })
            }
        });
    })
 </script>