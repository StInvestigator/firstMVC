@using firstMVC.Models.Forms
@model UserSkillForm
@{
    ViewData["Title"] = "Форма навички користувача";

    var selectItems = (ViewData["skills"] as List<Skill>)
    .Where(sk => (ViewData["userSkills"] as List<UserSkill>).Find(us => us.Skill.Id == sk.Id && us.Skill.Id != ViewData["id"] as int?) == null)
    .Select(x => new SelectListItem {
         Value = x.Id.ToString(),
         Text = x.Name
    });
    if (selectItems.Count() == 0)
    {
        selectItems = [new SelectListItem{Value = "-1", Text="Усі існуючі навички вже додані до списку. Додайте нові навички, або редагуйте додані"}];
    }
}
<h2>Skill properties</h2>
<form method="post">
    <div class="mb-3">
        <label asp-for="Mastery" class="form-label"></label>&nbsp;<label id="MasteryL">- @Model.Mastery%</label>
    <input asp-for="Mastery"  type="range" class="form-range" id="MasteryR">
    <span style="color:red">
        @Html.ValidationMessageFor(x => x.Mastery)
        <br/>
    </span>
    <label asp-for="SkillId" class="form-label"></label>
    <select asp-items="@selectItems" asp-for="SkillId" class="form-control"></select>
    <span style="color:red">
        @Html.ValidationMessageFor(x => x.Mastery)
        <br/>
    </span>
    </div>
    <button type="submit" class="btn btn-outline-success">Відправити</button>
</form>

@section Scripts{
    <script type="text/javascript">
        $.each(['mousemove', 'click'], function (k, v) {
            $('#MasteryR').on(v, function () {
                $('#MasteryL').text("- " + $('#MasteryR').val() + "%");
            });
        })
    </script>
}